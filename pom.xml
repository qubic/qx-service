<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <!--
          spring boot parent is used to keep this pom simple. it contains plugin and
          dependency management and some reasonable defaults. Does not add spring
          dependencies.
        -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.qubic.qx</groupId>
    <artifactId>qx-parent</artifactId>
    <version>0.2.0-SNAPSHOT</version>
    <name>${project.groupId}:${project.artifactId}</name>
    <description>Qubic QX Service</description>
    <packaging>pom</packaging>

    <properties>
        <java.version>21</java.version>
        <embedded-redis.version>1.4.3</embedded-redis.version>
        <mapstruct.version>1.6.0</mapstruct.version>
        <qubicj.version>1.3.0</qubicj.version>
        <resilience4j.version>2.2.0</resilience4j.version>
    </properties>

    <modules>
        <module>qx-sync</module>
    </modules>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>at.qubic</groupId>
                <artifactId>qubicj-computor-api</artifactId>
                <version>${qubicj.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-bulkhead</artifactId>
                <version>${resilience4j.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-reactor</artifactId>
                <version>${resilience4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <!-- we could use testcontainers instead of embedded redis -->
            <dependency>
                <groupId>com.github.codemonstur</groupId>
                <artifactId>embedded-redis</artifactId>
                <version>${embedded-redis.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>


</project>
